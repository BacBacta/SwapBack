name: "CodeQL"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 1'  # Tous les lundis à minuit

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
          - language: rust
            build-mode: manual

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Utiliser le token par défaut pour augmenter rate limit
        token: ${{ github.token }}

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        config-file: ./.github/codeql/codeql-config.yml
        queries: +security-extended,+security-and-quality

    - name: Setup Node.js (for JavaScript/TypeScript)
      if: matrix.language == 'javascript-typescript'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Rust toolchain (for Rust)
      if: matrix.language == 'rust'
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Install Solana CLI (for Rust)
      if: matrix.language == 'rust'
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v1.18.22/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

    - name: Install Anchor CLI (for Rust)
      if: matrix.language == 'rust'
      run: |
        cargo install --git https://github.com/coral-xyz/anchor --tag v0.30.1 anchor-cli --locked --force

    - name: Build Rust programs with Anchor
      if: matrix.language == 'rust'
      run: |
        anchor build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{ matrix.language }}"
        output: sarif-results
        upload: true

    - name: Upload SARIF as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: codeql-sarif-${{ matrix.language }}
        path: sarif-results
        retention-days: 30
