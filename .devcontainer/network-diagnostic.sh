#!/bin/bash
# Script de diagnostic r√©seau pour Codespaces
# Identifie et r√©sout les probl√®mes de connexion

set -e

echo "üîç Diagnostic r√©seau Codespaces..."
echo "=================================="
echo ""

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 1. V√©rifier la connectivit√© DNS
echo "1Ô∏è‚É£ Test DNS..."
if nslookup github.com > /dev/null 2>&1; then
    echo -e "${GREEN}‚úì${NC} DNS fonctionne (github.com r√©solu)"
else
    echo -e "${RED}‚úó${NC} DNS √©choue - Probl√®me potentiel avec /etc/resolv.conf"
    cat /etc/resolv.conf
fi
echo ""

# 2. V√©rifier la connectivit√© r√©seau
echo "2Ô∏è‚É£ Test connectivit√© Internet..."
if ping -c 3 8.8.8.8 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úì${NC} Ping vers 8.8.8.8 r√©ussi"
else
    echo -e "${RED}‚úó${NC} Pas de connectivit√© Internet"
fi
echo ""

# 3. V√©rifier les variables d'environnement gRPC
echo "3Ô∏è‚É£ Variables d'environnement gRPC..."
if [ -z "$GRPC_VERBOSITY" ]; then
    echo -e "${YELLOW}‚ö†${NC} GRPC_VERBOSITY non d√©fini (devrait √™tre 'error')"
else
    echo -e "${GREEN}‚úì${NC} GRPC_VERBOSITY=$GRPC_VERBOSITY"
fi

if [ -z "$GRPC_DNS_RESOLVER" ]; then
    echo -e "${YELLOW}‚ö†${NC} GRPC_DNS_RESOLVER non d√©fini (devrait √™tre 'native')"
else
    echo -e "${GREEN}‚úì${NC} GRPC_DNS_RESOLVER=$GRPC_DNS_RESOLVER"
fi
echo ""

# 4. V√©rifier les ports en √©coute
echo "4Ô∏è‚É£ Ports en √©coute..."
netstat -tuln | grep -E ':(3000|8080|8899|2000)' || echo "Aucun port applicatif en √©coute"
echo ""

# 5. V√©rifier les processus lourds
echo "5Ô∏è‚É£ Processus consommant le plus de m√©moire..."
ps aux --sort=-%mem | head -10
echo ""

# 6. V√©rifier l'utilisation disque
echo "6Ô∏è‚É£ Espace disque..."
df -h /workspaces | tail -1
echo ""

# 7. Tester la connexion VS Code Remote
echo "7Ô∏è‚É£ Test connexion VS Code Remote..."
if pgrep -f "vscode-server" > /dev/null; then
    echo -e "${GREEN}‚úì${NC} VS Code Server actif"
    ps aux | grep vscode-server | grep -v grep | head -3
else
    echo -e "${RED}‚úó${NC} VS Code Server non trouv√©"
fi
echo ""

# 8. V√©rifier les logs r√©cents
echo "8Ô∏è‚É£ Derniers logs keepalive..."
if [ -f /tmp/codespaces-keepalive.log ]; then
    tail -5 /tmp/codespaces-keepalive.log
else
    echo -e "${YELLOW}‚ö†${NC} Pas de log keepalive trouv√©"
fi
echo ""

# 9. Recommandations
echo "üîß RECOMMANDATIONS:"
echo "-------------------"

if [ ! -f /tmp/codespaces-keepalive.log ]; then
    echo -e "${YELLOW}‚Ä¢${NC} Lancer le keepalive: bash .devcontainer/keepalive.sh"
fi

# V√©rifier si les variables gRPC sont d√©finies
if [ -z "$GRPC_VERBOSITY" ] || [ -z "$GRPC_DNS_RESOLVER" ]; then
    echo -e "${YELLOW}‚Ä¢${NC} Ajouter au ~/.bashrc ou ~/.zshrc:"
    echo "  export GRPC_VERBOSITY=error"
    echo "  export GRPC_DNS_RESOLVER=native"
    echo "  export GRPC_TRACE=''"
fi

# V√©rifier l'espace disque
DISK_USAGE=$(df /workspaces | tail -1 | awk '{print $5}' | sed 's/%//')
if [ "$DISK_USAGE" -gt 85 ]; then
    echo -e "${RED}‚Ä¢${NC} Nettoyer le disque (${DISK_USAGE}% utilis√©):"
    echo "  rm -rf node_modules target"
fi

echo ""
echo "=================================="
echo "‚úÖ Diagnostic termin√©"
echo ""
echo "Si les d√©connexions persistent:"
echo "1. Rechargez la fen√™tre VS Code (Cmd/Ctrl+R)"
echo "2. Reconstruisez le container: Cmd+Shift+P ‚Üí 'Rebuild Container'"
echo "3. V√©rifiez votre connexion locale (VPN, firewall, proxy)"
