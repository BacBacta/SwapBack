# Script de d√©ploiement g√©n√©r√© automatiquement
# Programme Buyback avec support Token-2022
# Date: 2025-10-31T14:46:23.677Z

echo "üöÄ D√©ploiement programme buyback Token-2022"
echo "=========================================="

# 1. Installer Solana CLI (si pas d√©j√† fait)
echo "üì¶ Installation Solana CLI..."
if ! command -v solana &> /dev/null; then
    echo "Installation de Solana CLI..."
    sh -c "$(curl -sSfL https://release.solana.com/v1.18.22/install)"
    export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
else
    echo "Solana CLI d√©j√† install√©"
fi

# 2. Configuration pour devnet
echo "üåê Configuration Solana devnet..."
solana config set --url https://api.devnet.solana.com
solana config set --commitment confirmed

# 3. Cr√©er un wallet si n√©cessaire
echo "üëõ Configuration wallet..."
if [ ! -f ~/.config/solana/id.json ]; then
    echo "Cr√©ation d'un nouveau wallet..."
    solana-keygen new --no-passphrase
else
    echo "Wallet existant trouv√©"
fi

echo "Adresse wallet: $(solana address)"
echo "Solde actuel: $(solana balance)"

# 4. Obtenir des SOL si n√©cessaire
BALANCE=$(solana balance | awk '{print $1}' | sed 's/SOL//')
if (( $(echo "$BALANCE < 5" | bc -l 2>/dev/null || echo "5") )); then
    echo "üí∞ Obtention d'airdrop (5 SOL)..."
    solana airdrop 5
    echo "Nouveau solde: $(solana balance)"
fi

# 5. Cr√©er les fichiers de d√©ploiement
echo "üìÅ Pr√©paration des fichiers..."
mkdir -p ~/swapback-deployment

# Copiez ces fichiers depuis votre workspace:
# - target/deploy/swapback_buyback-keypair.json ‚Üí ~/swapback-deployment/
# - target/deploy/swapback_buyback.so ‚Üí ~/swapback-deployment/

cat > ~/swapback-deployment/deploy.sh << 'EOF'
#!/bin/bash
set -e

echo "üöÄ D√©ploiement du programme buyback..."

# Chemins des fichiers (√† ajuster selon votre copie)
PROGRAM_KEYPAIR="swapback_buyback-keypair.json"
PROGRAM_BINARY="swapback_buyback.so"
PROGRAM_ID="9KTkQyjDYHF4vemLZjYQM1XE74peviEi1tSXaYMSyZHT"

# V√©rifier les fichiers
if [ ! -f "$PROGRAM_KEYPAIR" ]; then
    echo "‚ùå Keypair manquante: $PROGRAM_KEYPAIR"
    echo "Copiez target/deploy/swapback_buyback-keypair.json ici"
    exit 1
fi

if [ ! -f "$PROGRAM_BINARY" ]; then
    echo "‚ùå Binaire manquant: $PROGRAM_BINARY"
    echo "Copiez target/deploy/swapback_buyback.so ici"
    exit 1
fi

echo "Fichiers v√©rifi√©s ‚úÖ"

# D√©ployer le programme
echo "üì¶ D√©ploiement en cours..."
solana program deploy \
    --program-id "$PROGRAM_KEYPAIR" \
    "$PROGRAM_BINARY"

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ D√âPLOIEMENT R√âUSSI!"
    echo "======================"
    echo "Programme ID: $PROGRAM_ID"
    echo "Support Token-2022: ‚úÖ Activ√©"
    echo ""
    echo "üéØ Prochaines √©tapes:"
    echo "1. V√©rifier: solana program show $PROGRAM_ID"
    echo "2. Tester la compatibilit√© Token-2022"
    echo "3. Initialiser les √©tats buyback"
else
    echo ""
    echo "‚ùå √âCHEC DU D√âPLOIEMENT"
    echo "V√©rifiez les logs ci-dessus"
fi
EOF

chmod +x ~/swapback-deployment/deploy.sh

echo ""
echo "üìã INSTRUCTIONS:"
echo "==============="
echo ""
echo "1. Copiez les fichiers suivants dans ~/swapback-deployment/ :"
echo "   - target/deploy/swapback_buyback-keypair.json"
echo "   - target/deploy/swapback_buyback.so"
echo ""
echo "2. Allez dans le r√©pertoire:"
echo "   cd ~/swapback-deployment"
echo ""
echo "3. Ex√©cutez le d√©ploiement:"
echo "   ./deploy.sh"
echo ""
echo "4. V√©rifiez le d√©ploiement:"
echo "   solana program show 9KTkQyjDYHF4vemLZjYQM1XE74peviEi1tSXaYMSyZHT"
echo ""
echo "üéØ Programme ID cible: 9KTkQyjDYHF4vemLZjYQM1XE74peviEi1tSXaYMSyZHT"
echo "üîó Devnet RPC: https://api.devnet.solana.com"
