#!/bin/bash

# Script de d√©ploiement manuel du programme buyback
# √Ä ex√©cuter sur une machine avec Solana CLI install√©

set -e

echo "üöÄ D√©ploiement manuel programme buyback Token-2022"
echo "================================================"
echo

# V√©rifier que Solana CLI est install√©
if ! command -v solana &> /dev/null; then
    echo "‚ùå Solana CLI n'est pas install√©"
    echo "   Installez-le depuis: https://docs.solana.com/cli/install-solana-cli-tools"
    exit 1
fi

# Configuration
PROGRAM_KEYPAIR="target/deploy/swapback_buyback-keypair.json"
PROGRAM_BINARY="target/deploy/swapback_buyback.so"
PROGRAM_ID="EoVjmALZdkU3N9uehxVV4n9C6ukRa8QrbZRMHKBD2KUf"

echo "üìã Configuration:"
echo "   Programme ID: $PROGRAM_ID"
echo "   Keypair: $PROGRAM_KEYPAIR"
echo "   Binaire: $PROGRAM_BINARY"
echo

# V√©rifier que les fichiers existent
if [ ! -f "$PROGRAM_KEYPAIR" ]; then
    echo "‚ùå Keypair du programme introuvable: $PROGRAM_KEYPAIR"
    exit 1
fi

if [ ! -f "$PROGRAM_BINARY" ]; then
    echo "‚ùå Binaire du programme introuvable: $PROGRAM_BINARY"
    exit 1
fi

echo "‚úÖ Fichiers de d√©ploiement trouv√©s"
echo

# Configurer Solana pour devnet
echo "üåê Configuration Solana pour devnet..."
solana config set --url https://api.devnet.solana.com
solana config set --commitment confirmed

# Afficher la configuration actuelle
echo "üìä Configuration actuelle:"
solana config get
echo

# V√©rifier le solde du wallet
WALLET=$(solana address)
echo "üëõ Wallet: $WALLET"

BALANCE=$(solana balance | awk '{print $1}')
echo "üí∞ Solde: $BALANCE SOL"

# V√©rifier si le solde est suffisant (minimum 5 SOL)
BALANCE_NUM=$(echo "$BALANCE" | sed 's/SOL//')
if (( $(echo "$BALANCE_NUM < 5" | bc -l) )); then
    echo "‚ö†Ô∏è  Solde insuffisant ($BALANCE_NUM SOL). Il faut au moins 5 SOL."
    echo
    echo "üí° Obtenez un airdrop:"
    echo "   solana airdrop 5"
    echo
    echo "   Ou visitez: https://faucet.solana.com"
    exit 1
fi

echo "‚úÖ Solde suffisant"
echo

# V√©rifier si le programme existe d√©j√†
echo "üîç V√©rification du programme existant..."
if solana program show "$PROGRAM_ID" &> /dev/null; then
    echo "‚úÖ Programme trouv√© - mise √† jour requise"
    DEPLOY_TYPE="upgrade"
else
    echo "üì¶ Programme non trouv√© - d√©ploiement initial"
    DEPLOY_TYPE="deploy"
fi

echo

# Demander confirmation
echo "‚ö†Ô∏è  ATTENTION: Cette op√©ration va $DEPLOY_TYPE le programme buyback"
echo "   avec support Token-2022."
echo
read -p "Continuer ? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå D√©ploiement annul√©"
    exit 1
fi

echo
echo "üöÄ D√©ploiement en cours..."

# D√©ployer ou mettre √† jour le programme
if [ "$DEPLOY_TYPE" = "upgrade" ]; then
    # Mise √† jour du programme existant
    echo "‚¨ÜÔ∏è  Mise √† jour du programme..."
    solana program deploy \
        --program-id "$PROGRAM_KEYPAIR" \
        "$PROGRAM_BINARY" \
        --upgrade-authority ~/.config/solana/id.json
else
    # D√©ploiement initial
    echo "üì¶ D√©ploiement initial..."
    solana program deploy \
        --program-id "$PROGRAM_KEYPAIR" \
        "$PROGRAM_BINARY"
fi

if [ $? -eq 0 ]; then
    echo
    echo "‚úÖ D√âPLOIEMENT R√âUSSI !"
    echo "=========================="
    echo "Programme ID: $PROGRAM_ID"
    echo "Support Token-2022: ‚úÖ Activ√©"
    echo
    echo "üéØ Prochaines √©tapes:"
    echo "1. Tester la compatibilit√©: node test-buyback-compatibility.js"
    echo "2. Initialiser les √©tats: node scripts/init-buyback-states.js"
    echo "3. Tester le flow complet: lock ‚Üí buyback ‚Üí claim"
    echo
    echo "üìä V√©rifier le programme:"
    echo "   solana program show $PROGRAM_ID"
else
    echo
    echo "‚ùå √âCHEC DU D√âPLOIEMENT"
    echo "========================"
    echo "V√©rifiez les logs ci-dessus pour les d√©tails"
    echo
    echo "üí° Solutions possibles:"
    echo "- V√©rifiez votre solde: solana balance"
    echo "- Obtenez un airdrop: solana airdrop 5"
    echo "- V√©rifiez la configuration: solana config get"
    exit 1
fi