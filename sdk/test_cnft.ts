#!/usr/bin/env npx tsx

import { Connection, Keypair } from '@solana/web3.js';
import { CnftClient, DEFAULT_CNFT_CONFIG } from './src/cnftClient';

// Configuration pour les tests
const CONNECTION_URL = 'http://localhost:8899'; // Localnet
const AUTHORITY_KEYPAIR = Keypair.generate(); // √Ä remplacer par une vraie cl√©

async function testCnftProgram() {
  console.log('üöÄ Test du programme cNFT SwapBack\n');

  // Connexion √† Solana
  const connection = new Connection(CONNECTION_URL, 'confirmed');

  // Cr√©er le client cNFT
  const cnftClient = new CnftClient(connection, {} as any, DEFAULT_CNFT_CONFIG);

  try {
    // V√©rifier la connexion
    const version = await connection.getVersion();
    console.log('‚úÖ Connect√© √† Solana', version);

    console.log('üìã Programme cNFT configur√©');
    console.log('üîë Program ID:', DEFAULT_CNFT_CONFIG.programId.toString());
    console.log('üìÅ Collection Config:', DEFAULT_CNFT_CONFIG.collectionConfig.toString());

    console.log('\n‚úÖ Tests cNFT termin√©s avec succ√®s!');

  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error);
    process.exit(1);
  }
}

// Ex√©cuter les tests si appel√© directement
if (require.main === module) {
  testCnftProgram();
}

export { testCnftProgram };