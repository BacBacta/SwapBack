#!/bin/bash

# Script de build qui g√®re le probl√®me de Cargo.lock version 4
# Ceci est un workaround temporaire

set -e

echo "üîß SwapBack Build Script (workaround Cargo.lock v4)"

# Charger l'environnement
source "$HOME/.cargo/env"
export PATH="/home/codespace/.local/share/solana/install/active_release/bin:$PATH"

# Supprimer Cargo.lock s'il existe
if [ -f "Cargo.lock" ]; then
    echo "üìù Suppression de Cargo.lock v4..."
    rm -f Cargo.lock
fi

# Cr√©er un Cargo.lock v3 temporaire
echo "üìù Cr√©ation d'un Cargo.lock v3 temporaire..."
cat > Cargo.lock << 'EOF'
# This file is automatically @generated by Cargo.
# It is not intended for manual editing.
version = 3
EOF

# Installer une version compatible de Rust si n√©cessaire
RUST_VERSION=$(rustc --version | grep -oP '\d+\.\d+\.\d+' | head -1)
echo "ü¶Ä Version Rust actuelle: $RUST_VERSION"

# Essayer de downgrade vers Rust 1.79 qui utilise Cargo.lock v3
echo "üì¶ Installation de Rust 1.79 pour compatibilit√©..."
rustup install 1.79.0 --force-non-host || true
rustup default 1.79.0 || true

# V√©rifier la nouvelle version
echo "ü¶Ä Nouvelle version Rust: $(rustc --version)"
echo "üì¶ Nouvelle version Cargo: $(cargo --version)"

# Nettoyer et rebuild
echo "üßπ Nettoyage..."
rm -rf target
rm -f Cargo.lock

# Build avec anchor
echo "üî® Build des programmes..."
anchor build

echo "‚úÖ Build termin√©!"
echo "üìÅ Binaires dans: target/deploy/"
ls -lh target/deploy/*.so 2>/dev/null || echo "‚ö†Ô∏è  Aucun binaire trouv√©"
